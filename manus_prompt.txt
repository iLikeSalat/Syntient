# Project Setup Request

Manus, I want you to set up a full modular AI assistant platform that I will eventually sell or evolve into a SaaS tool.

## 🔧 Tech Stack
- Python
- Flask (for API)
- LangChain (optional, for memory/tool orchestration)
- OpenAI (GPT-3.5 via my `sk-proj-...` key, already tested and working)
- dotenv for config

## 🧱 System Architecture
- core/assistant.py → Handles prompts and model responses
- tools/ → Modular agent tools (e.g., trading, Telegram bot, file parsing)
- memory/ → Long-term memory system (start with placeholder or Chroma)
- app.py → Flask API exposing a `/ask` route
- .env → API key and config
- venv/ (optional) → For local Python environment

## 🔄 Agent Behavior
- Accepts user task
- Plans and executes across multiple steps
- Can retry or debug itself
- Calls internal tools if needed
- Future-ready for autonomy loop logic

## 🧩 Requirements
- Modular, clean codebase (no monoliths)
- Clear function interfaces
- Works on Windows + Linux
- No lock-in to OpenAI SDK (just raw API calls)
- Easy to add memory, plugins, or tools later

## 📚 Project Files to Include
- `README.md` → Full project overview and usage
- `PROGRESS.md` → Daily/weekly log of what's done
- `TODO.md` → Immediate next steps / feature backlog
- `DECISIONS.md` → Log of technical design choices and tradeoffs
- `ROADMAP.md` → Milestone-based feature goals
- `manus_prompt.txt` → This file for transparency and continuity

## 🧪 Dev Goals
- First iteration: working `/ask` API + GPT-3.5 response + plugin-ready system
- Iterative structure: each feature added cleanly with docs and traceability
- GitHub-ready structure for version control and public transparency

CHATGPT API KEY : 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

🔗 GitHub repo: https://github.com/iLikeSalat/Syntient
🔐 Personal Access Token: [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]
